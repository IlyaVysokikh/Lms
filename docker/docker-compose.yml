version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: fastapi_app
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_SERVER=postgres
      - POSTGRES_DB=app_db
      - REDIS_URL=redis://redis:6379/0
      - NATS_URL=nats://nats:4222
    ports:
      - "8000:8000"
    volumes:
      - ../src:/app/src
    depends_on:
      - postgres
      - redis
      - nats
    networks:
      - backend

  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - backend
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  nats:
    image: nats:2.9-alpine
    container_name: nats_server
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "4222:4222"
      - "8222:8222"
    command: "-js"

volumes:
  postgres_data:
  redis_data:

networks:
  backend:
    driver: bridge